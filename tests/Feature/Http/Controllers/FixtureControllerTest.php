<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\FixtureController
 */
class FixtureControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function update_scores_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $fixture = \App\Models\Fixture::factory()->create();
        $statistic = \App\Models\Statistic::factory()->create();

        $response = $this->post(route('update.scores', [$fixture]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('fixture.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function add_scores_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $fixture = \App\Models\Fixture::factory()->create();

        $response = $this->get(route('add.scores', [$fixture]));

        $response->assertOk();
        $response->assertViewIs('admin.fixtures.add_scores');
        $response->assertViewHas('fixture', $fixture);
        $response->assertViewHas('num_players');
        $response->assertViewHas('players');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function add_scores_post_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $fixture = \App\Models\Fixture::factory()->create();
        $players = \App\Models\Player::factory()->times(3)->create();

        $response = $this->post(route('add.scores.post', [$fixture]), [
            // TODO: send request data
        ]);

        $response->assertOk();
        $response->assertViewIs('admin.fixtures.add_scores');
        $response->assertViewHas('fixture', $fixture);
        $response->assertViewHas('num_players');
        $response->assertViewHas('players', $players);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $alliances = \App\Models\Alliance::factory()->times(3)->create();

        $response = $this->get(route('fixture.create'));

        $response->assertOk();
        $response->assertViewIs('admin.fixtures.add_fixture');
        $response->assertViewHas('teams');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $fixture = \App\Models\Fixture::factory()->create();

        $response = $this->delete(route('fixture.destroy', [$fixture]));

        $response->assertOk();
        $this->assertDeleted($fixture);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $fixture = \App\Models\Fixture::factory()->create();
        $alliances = \App\Models\Alliance::factory()->times(3)->create();

        $response = $this->get(route('fixture.edit', [$fixture]));

        $response->assertOk();
        $response->assertViewIs('admin.fixtures.edit_fixture');
        $response->assertViewHas('fixture', $fixture);
        $response->assertViewHas('teams');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $fixtures = \App\Models\Fixture::factory()->times(3)->create();

        $response = $this->get(route('fixture.index'));

        $response->assertOk();
        $response->assertViewIs('admin.fixtures.view_fixtures');
        $response->assertViewHas('fixtures', $fixtures);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $fixture = \App\Models\Fixture::factory()->create();
        $fixtureResults = \App\Models\FixtureResult::factory()->times(3)->create();

        $response = $this->get(route('fixture.show', [$fixture]));

        $response->assertOk();
        $response->assertViewIs('admin.fixtures.results');
        $response->assertViewHas('fixture', $fixture);
        $response->assertViewHas('goal_scorers');
        $response->assertViewHas('yellow_cards');
        $response->assertViewHas('red_cards');
        $response->assertViewHas('assists');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('fixture.store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('fixture.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $fixture = \App\Models\Fixture::factory()->create();

        $response = $this->put(route('fixture.update', [$fixture]), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    // test cases...
}
