<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\PlayerController
 */
class PlayerControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function delete_player_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $player = \App\Models\Player::factory()->create();

        $response = $this->get(route('delete.player', ['id' => $player->id]));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_player_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $player = \App\Models\Player::factory()->create();
        $teams = \App\Models\Teams::factory()->times(3)->create();
        $squads = \App\Models\Squad::factory()->times(3)->create();
        $contracts = \App\Models\Contracts::factory()->times(3)->create();
        $playerPositions = \App\Models\PlayerPosition::factory()->times(3)->create();

        $response = $this->get(route('edit.player', ['id' => $player->id]));

        $response->assertOk();
        $response->assertViewIs('admin.players.edit_player');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function new_player_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $teams = \App\Models\Teams::factory()->times(3)->create();
        $squads = \App\Models\Squad::factory()->times(3)->create();
        $contracts = \App\Models\Contracts::factory()->times(3)->create();
        $playerPositions = \App\Models\PlayerPosition::factory()->times(3)->create();

        $response = $this->get(route('new.player'));

        $response->assertOk();
        $response->assertViewIs('admin.players.new_player');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function save_player_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('save.player'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('view.player'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_player_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $player = \App\Models\Player::factory()->create();

        $response = $this->post(route('update.player', ['id' => $player->id]), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function view_players_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $players = \App\Models\Player::factory()->times(3)->create();

        $response = $this->get(route('view.player'));

        $response->assertOk();
        $response->assertViewIs('admin.players.view_players');

        // TODO: perform additional assertions
    }

    // test cases...
}
