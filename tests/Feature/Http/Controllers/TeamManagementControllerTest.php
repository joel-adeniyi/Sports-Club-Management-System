<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\TeamManagementController
 */
class TeamManagementControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function delete_squad_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $squad = \App\Models\Squad::factory()->create();

        $response = $this->get(route('delete.squad', ['id' => $id]));

        $response->assertRedirect(route('view.squad'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_squad_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $squad = \App\Models\Squad::factory()->create();

        $response = $this->get(route('edit.squad', ['id' => $id]));

        $response->assertOk();
        $response->assertViewIs('admin.squad.edit_squad');
        $response->assertViewHas('editData');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function new_squad_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('new.squad'));

        $response->assertOk();
        $response->assertViewIs('admin.squad.add_squad');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function save_squad_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('save.squad'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('view.squad'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_squad_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $squad = \App\Models\Squad::factory()->create();

        $response = $this->post(route('update.squad', ['id' => $id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('view.squad'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function view_squad_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $squads = \App\Models\Squad::factory()->times(3)->create();

        $response = $this->get(route('view.squad'));

        $response->assertOk();
        $response->assertViewIs('admin.squad.view_squad');

        // TODO: perform additional assertions
    }

    // test cases...
}
